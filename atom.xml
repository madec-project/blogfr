<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[MADEC]]></title>
  <subtitle><![CDATA[Visualisation d'information structurée en rapport]]></subtitle>
  <link href="/blog/atom.xml" rel="self"/>
  <link href="http://madec-project.github.io/blog/"/>
  <updated>2015-04-15T13:42:32.000Z</updated>
  <id>http://madec-project.github.io/blog/</id>
  
  <author>
    <name><![CDATA[MADEC]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[Sprint Review #15W09: stabilisation]]></title>
    <link href="http://madec-project.github.io/blog/2015/03/30/Sprint-Review-15W09-stabilisation/"/>
    <id>http://madec-project.github.io/blog/2015/03/30/Sprint-Review-15W09-stabilisation/</id>
    <published>2015-03-30T14:00:00.000Z</published>
    <updated>2015-04-15T13:42:32.000Z</updated>
    <content type="html"><![CDATA[<h1 id="Blog">Blog</h1><p>Afin de ne pas perdre des articles sur MADEC en général, et de pouvoir les stocker quelque part, ils sont écrits en français et en <a href="http://daringfireball.net/projects/markdown/syntax" target="_blank" rel="external">Markdown</a>, sauvegardés sur <a href="https://github.com/madec-project/blogfr" target="_blank" rel="external">GitHub</a>.</p>
<p>Nous avons choisi un générateur de site statique nommé <a href="http://hexo.io" target="_blank" rel="external">Hexo</a>.</p>
<p>J’ai <a href="2015/03/13/Presentation/">transcrit le poster</a> soumis (et accepté?) à <a href="http://atlas.irit.fr/" target="_blank" rel="external">VSST</a>.</p>
<p>J’ai aussi commencé un article sur le minimum à savoir pour <a href="/2015/03/19/Configuration/">configurer un ezVIS</a>.</p>
<p>J’en profite pour noter les sujets (et les liens) à présenter lors de cette <em>sprint review</em> numéro 9 qui expose les tâches menées à bien depuis la semaine 9 de 2015.</p>
<h1 id="machine_virtuelle">machine virtuelle</h1><p>Nous avons eu quelques soucis de requêtes répondant bizarrement sur la machine virtuelle hébergeant <code>ezmaster</code> et <code>ezVIS</code>. Nous avons d’abord cru qu’il s’agissait d’un problème de mémoire (tant le <em>swap</em> était peu utilisé).</p>
<p>La mémoire vive de la machine a donc été portée de 2Gio à 8Gio.</p>
<h1 id="ezmaster">ezmaster</h1><p>L’application <code>castor-admin</code>, qui sert à administrer des instances d’applications (ou apps) basées sur <code>castor-core</code> (comme le sont <a href="http://github.com/madec-project/ezvis" target="_blank" rel="external"><code>ezvis</code></a> et <a href="https://github.com/termith-anr/idefix" target="_blank" rel="external"><code>idefix</code></a>) a été renommée en <code>ezmaster</code>, que ce soit sur <a href="https://github.com/madec-project/ezmaster" target="_blank" rel="external">GitHub</a> ou sur <a href="https://www.npmjs.com/package/ezmaster" target="_blank" rel="external">npm</a>.</p>
<h1 id="board-inist-fr">board.inist.fr</h1><p>Nous avons configuré <code>ezmaster</code> sur la machine virtuelle pour que le nom de domaine <code>board.inist.fr</code> et ses sous-domaines puissent servir à publier une instance d’<code>ezvis</code>.</p>
<p>Ainsi, les instances mises en place pour la démonstration du projet au directeur de la DIST jeudi dernier (le 26/03/2015) sont accessibles de l’extérieur.</p>
<ul>
<li>ezPAARSE results for ST2I portal logs (march 2015): <a href="http://couperin_ezpaarseezvis640v3_3.board.inist.fr" target="_blank" rel="external">http://couperin_ezpaarseezvis640v3_3.board.inist.fr</a></li>
<li>ISTEX - Food Science &amp; Technology: <a href="http://dist_istexfoodscitechnezvis640v1_1.board.inist.fr" target="_blank" rel="external">http://dist_istexfoodscitechnezvis640v1_1.board.inist.fr</a></li>
<li>Lorraine (Moselle) - 2007-2012: <a href="http://inist_lorraineezvis640v1_1.board.inist.fr" target="_blank" rel="external">http://inist_lorraineezvis640v1_1.board.inist.fr</a></li>
</ul>
<p>Les deux premières instances sont aussi disponibles dans le dépôt vitrine: <a href="https://github.com/madec-project/showcase" target="_blank" rel="external">showcase</a>.</p>
<p>Isabelle y a aussi ajouté une étude sur les séries télévisées.</p>
<h1 id="dalekjs">dalekjs</h1><p>J’ai commencé à mettre en place des tests, non pas unitaires, mais de comportement de l’application: en utilisant <a href="http://dalekjs.com" target="_blank" rel="external">dalekjs</a>, on peut écrire des scénarios de test de l’application.</p>
<p>Lancement du serveur à tester:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> ~/dev/castorjs/ezvis</span><br><span class="line">$ node cli <span class="built_in">test</span>/dataset/<span class="built_in">test</span>2</span><br></pre></td></tr></table></figure></p>
<p>Lancement des tests:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> ~/dev/castorjs/ezvis</span><br><span class="line">$ dalek <span class="built_in">test</span>/<span class="built_in">test</span>2.js</span><br></pre></td></tr></table></figure></p>
<p>Résultat espéré:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">Running tests</span><br><span class="line">Running Browser: PhantomJS</span><br><span class="line">OS: linux unknown <span class="number">64</span>bit</span><br><span class="line">Browser Version: <span class="number">1.9</span>.<span class="number">8</span></span><br><span class="line">RUNNING TEST - <span class="string">"Has data"</span></span><br><span class="line">▶ OPEN http://localhost:<span class="number">20002</span>/documents.html</span><br><span class="line">▶ WAITFOR Interrupted by timeout</span><br><span class="line">✔ EXISTS <span class="string">"Showing 1 to 4 of 4 entries"</span></span><br><span class="line">✔ TEXT <span class="string">"Showing 1 to 4 of 4 entries"</span></span><br><span class="line">✔ TEXT <span class="string">"1906"</span> <span class="keyword">in</span> first line</span><br><span class="line">✔ TEXT <span class="string">"Kurt Gödel"</span> <span class="keyword">in</span> first line</span><br><span class="line">▶ CLICK <span class="comment">#dataTables-documents tr:nth-child(4) td:first:first-child a</span></span><br><span class="line">✔ TITLE Correct</span><br><span class="line">✔ <span class="number">5</span> Assertions run</span><br><span class="line">✔ TEST - <span class="string">"Has data"</span> SUCCEEDED</span><br><span class="line">RUNNING TEST - <span class="string">"Good display"</span></span><br><span class="line">▶ OPEN http://localhost:<span class="number">20002</span>/display/Z5OAoW.html</span><br><span class="line">✔ TITLE Correct</span><br><span class="line">✔ NUMBEROFELEMENTS <span class="number">3</span> fields displayed</span><br><span class="line">✔ TEXT Name is <span class="string">"Douglas Hofstadter"</span></span><br><span class="line">✔ <span class="number">3</span> Assertions run</span><br><span class="line">✔ TEST - <span class="string">"Good display"</span> SUCCEEDED</span><br><span class="line"> <span class="number">8</span>/<span class="number">8</span> assertions passed. Elapsed Time: <span class="number">10.11</span> sec</span><br></pre></td></tr></table></figure></p>
<h1 id="JBJ">JBJ</h1><ul>
<li>on a évité d’écrire une action <code>mapArray</code> inutile (<a href="https://github.com/castorjs/node-jbj/issues/5" target="_blank" rel="external">jbj#5</a>)</li>
<li>j’ai ajouté l’action <code>substring</code> (<a href="https://github.com/castorjs/node-jbj/issues/6" target="_blank" rel="external">jbj#6</a>), plus simple et intuitive que l’utilisation successive de <code>truncate</code> et <code>shift</code>.</li>
</ul>
<h1 id="ezVIS">ezVIS</h1><p>J’ai commencé à me servir des fonctionnalités de GitHub qui ne sont pas forcément incluses dans <code>git</code>: le système d’<em>issues</em> et de <em>milestones</em>.</p>
<p>J’ai donc placé un jalon pour ce sprint, en lui donnant une date. C’est la <a href="https://github.com/madec-project/ezvis/milestones?state=closed" target="_blank" rel="external">milestone</a> <a href="https://github.com/madec-project/ezvis/issues?q=milestone%3A%22Sprint+%2315W09%3A+stabilization%22" target="_blank" rel="external">“Sprint #15W09: stabilization” d’ezvis</a>:</p>
<ul>
<li>changer le label “Search” en “Filter” dans le page <code>/documents.html</code> <a href="https://github.com/madec-project/ezvis/issues/3" target="_blank" rel="external">#3</a></li>
<li>enlever le lien vers les champs depuis le tableau de bord <a href="https://github.com/madec-project/ezvis/issues/4" target="_blank" rel="external">#4</a></li>
<li>affecter une couleur à chaque champ d’un réseau inter-champs <a href="https://github.com/madec-project/ezvis/issues/5" target="_blank" rel="external">#5</a></li>
<li>corriger le bug d’export CSV vide de <code>/documents.html</code> <a href="https://github.com/madec-project/ezvis/issues/6" target="_blank" rel="external">#6</a></li>
<li>ajouter un seuil en-deça duquel on rassemble les valeurs dans le camembert <a href="https://github.com/madec-project/ezvis/issues/7" target="_blank" rel="external">#7</a></li>
<li>corriger les réseaux où les arcs sont dirigés <a href="https://github.com/madec-project/ezvis/issues/8" target="_blank" rel="external">#8</a></li>
<li>donner la possibilité de modifier la largeur de la colonne de gauche dans <code>/display.html</code> <a href="https://github.com/madec-project/ezvis/issues/9" target="_blank" rel="external">#9</a></li>
<li>restaurer la configuration des légendes <a href="https://github.com/madec-project/ezvis/issues/10" target="_blank" rel="external">#10</a></li>
<li>donner la possibilité d’afficher aussi les années vides dans les histogrammes <a href="https://github.com/madec-project/ezvis/issues/11" target="_blank" rel="external">#11</a></li>
<li>donner la possibilité d’afficher des labels plus courts sur les barres horizontales <a href="https://github.com/madec-project/ezvis/issues/12" target="_blank" rel="external">#12</a></li>
<li>verbaliser les codes des pays sélectionnés dans les cartes, afin de rendre les filtres plus lisibles <a href="https://github.com/madec-project/ezvis/issues/13" target="_blank" rel="external">#13</a></li>
<li>faire commencer l’axe des ordonnées à zéro dans les histogrammes <a href="https://github.com/madec-project/ezvis/issues/14" target="_blank" rel="external">#14</a></li>
<li>déterminer si on peut utiliser des chaînes de caractères sur l’axe des X pour créer des diagrammes à bulles <a href="https://github.com/madec-project/ezvis/issues/15" target="_blank" rel="external">#15</a></li>
<li>restaurer la configuration des couleurs <a href="https://github.com/madec-project/ezvis/issues/16" target="_blank" rel="external">#16</a></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="Blog">Blog</h1><p>Afin de ne pas perdre des articles sur MADEC en général, et de pouvoir les stocker quelque part, ils sont écrits e]]>
    </summary>
    
      <category term="dalekjs" scheme="http://madec-project.github.io/blog/tags/dalekjs/"/>
    
      <category term="ezmaster" scheme="http://madec-project.github.io/blog/tags/ezmaster/"/>
    
      <category term="ezvis" scheme="http://madec-project.github.io/blog/tags/ezvis/"/>
    
      <category term="jbj" scheme="http://madec-project.github.io/blog/tags/jbj/"/>
    
      <category term="proxy" scheme="http://madec-project.github.io/blog/tags/proxy/"/>
    
      <category term="showcase" scheme="http://madec-project.github.io/blog/tags/showcase/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Configuration d'ezVIS / minimum]]></title>
    <link href="http://madec-project.github.io/blog/2015/03/19/Configuration/"/>
    <id>http://madec-project.github.io/blog/2015/03/19/Configuration/</id>
    <published>2015-03-19T22:38:00.000Z</published>
    <updated>2015-04-15T13:35:57.000Z</updated>
    <content type="html"><![CDATA[<h1 id="Introduction">Introduction</h1><p>Pour créer un rapport web avec ezVIS, il faut configurer l’application. Il y a 3 volets:</p>
<ol>
<li>connexion avec la base de données</li>
<li>intégration des données</li>
<li>ajout de graphiques</li>
</ol>
<p>Ils sont tous gérables dans le fichier de configuration du rapport, qui est au format <a href="http://fr.wikipedia.org/wiki/JavaScript_Object_Notation" target="_blank" rel="external">JSON</a> (JavaScript Object Notation). Son extension est <code>.json</code>et son préfixe est obligatoirement le même que le nom du répertoire dans lequel se trouvent les fichiers de données.<br>Nous prendrons l’exemple d’un fichier <code>data.json</code> placé au même niveau que le répertoire <code>data</code>, qui contient un fichier au format CSV dont nous reparlerons plus tard.</p>
<h1 id="Connexion_avec_la_base_de_données">Connexion avec la base de données</h1><p>Le système de gestion de base de données utilisé par ezVIS est <a href="http://mongodb.org" target="_blank" rel="external">mongoDB</a>, et une connexion par défaut est utilisée, qui permet de retrouver les données liées au rapport dans la <em>database</em> appelée <code>castor</code>.<br>Si vous voulez changer cet emplacement, modifiez la clé <code>connexionURI</code>du fichier <code>data.json</code> (valeur par défaut: <code>mongodb://localhost:27017/castor/</code>).</p>
<p>À l’intérieur de <code>castor</code>, mongo range ses données dans des collections. Sans indication supplémentaire, ezVIS nomme la collection avec une clé de hachage calculée à partir du chemin du répertoire <code>data</code>. Cela donne un nom illisible pour un humain, mais quasi-unique en fonction du chemin.<br>Si vous avez l’intention de manipuler les données dans mongoDB (par exemple, simplement pour réinitialiser les données, avec <a href="https://github.com/castorjs/castor-clean" target="_blank" rel="external"><code>castor-clean</code></a>), il est prudent de renseigner la clé <code>collectionName</code>, dans notre cas avec la valeur <code>&quot;data&quot;</code>par exemple:</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"collectionName"</span>: <span class="string">"data"</span>,</span><br></pre></td></tr></table></figure>
<p>Tant que vous y êtes, il est prudent de renseigner aussi les clés <code>title</code>et <code>description</code>, pour vous y retrouver quand vous relirez ce fichier dans quelques mois…</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"title"</span>: <span class="string">"Rapport d'exemple de configuration"</span>,</span><br><span class="line"><span class="string">"description"</span>: <span class="string">"D'après l'article \"Configuration d'ezVIS / minimum\""</span>,</span><br><span class="line"><span class="string">"collectionName"</span>: <span class="string">"data"</span>,</span><br></pre></td></tr></table></figure>
<p><code>title</code> sera utilisé pour le titre du rapport (la fenêtre du navigateur) et <code>description</code> sera beaucoup plus discrètement placée dans les métadonnées HTML du rapport (visible surtout des moteurs de recherche).</p>
<p>À condition d’avoir déjà installé <code>ezvis</code>, vous pouvez d’ores et déjà le lancer avec:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ezvis data</span><br></pre></td></tr></table></figure>
<h1 id="Intégration_des_données">Intégration des données</h1><p>Après avoir lancé ezVIS, un rapport vide devrait être consultable à l’URL <a href="http://localhost:3000/" target="_blank" rel="external">http://localhost:3000/</a> (3000 étant le port par défaut, on peut le changer via la clé <code>port</code>).</p>
<p>Le menu gauche doit donner accès au <em>dashboard</em> et aux <em>documents</em>.</p>
<p>Seul un message signalant qu’aucune configuration n’existe encore apparaît sur ces deux pages.</p>
<p>Nous allons commencer par configurer simplement la liste des documents. Elle se présente sous la forme d’une table affichant, dans l’ordre où ils sont déclarés dans le fichier <code>data.json</code>, tous les champs déclarés <em>visibles</em>.</p>
<p>Prenons un exemple simple, un fichier <code>data.csv</code> qui sera placé dans le répertoire <code>data</code>:</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">year,person&#10;1912,Alan Turing&#10;1927,Marvin Minsky</span><br></pre></td></tr></table></figure>
<p>C’est un fichier CSV (Comma Separated Values) qui aurait pu être exporté d’un tableur, comme Excel ou LibreOffice.<br>Pour que ces données soient affichées dans la page <a href="http://localhost:3000/documents.html" target="_blank" rel="external">http://localhost:3000/documents.html</a>, il faut que nous déclarions les champs <code>year</code>et <code>person</code> (qui sont automatiquement placés dans une clé <code>content.json</code> de chaque document dans la base, au démarrage d’ezVIS).<br>Le premier document sera placé dans la base sous forme d’un document JSON, et la partie qui nous intéresse aura cette forme:</p>
<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  "<span class="attribute">content</span>": <span class="value">&#123;</span><br><span class="line">    "<span class="attribute">json</span>": <span class="value">&#123;</span><br><span class="line">      "<span class="attribute">year</span>": <span class="value"><span class="string">"1912"</span></span>,</span><br><span class="line">      "<span class="attribute">person</span>": <span class="value"><span class="string">"Marvin Minsky"</span></span><br><span class="line">    </span>&#125;</span><br><span class="line">  </span>&#125;</span><br><span class="line"></span>&#125;</span><br></pre></td></tr></table></figure>
<p>Pour déclarer les champs, nous utiliserons la clé <code>documentFields</code> (qui au passage créera une copie du contenu des champs mais directement à la racine du document):</p>
<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  "<span class="attribute">documentFields</span>": <span class="value">&#123;</span><br><span class="line">    "<span class="attribute">$year</span>": <span class="value">&#123;</span><br><span class="line">	  "<span class="attribute">get</span>": <span class="value"><span class="string">"content.json.year"</span></span>,</span><br><span class="line">	  "<span class="attribute">visible</span>": <span class="value"><span class="literal">true</span></span>,</span><br><span class="line">	  "<span class="attribute">label</span>": <span class="value"><span class="string">"Année"</span></span><br><span class="line">    </span>&#125;</span>,</span><br><span class="line">    "<span class="attribute">$person</span>": <span class="value">&#123;</span><br><span class="line">      "<span class="attribute">get</span>": <span class="value"><span class="string">"content.json.person"</span></span>,</span><br><span class="line">      "<span class="attribute">visible</span>": <span class="value"><span class="literal">true</span></span>,</span><br><span class="line">      "<span class="attribute">label</span>": <span class="value"><span class="string">"Nom"</span></span><br><span class="line">    </span>&#125;</span><br><span class="line">  </span>&#125;</span><br><span class="line"></span>&#125;</span><br></pre></td></tr></table></figure>
<p>Cette déclaration modifiera le document précédent pour donner ceci:</p>
<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  "<span class="attribute">content</span>": <span class="value">&#123;</span><br><span class="line">    "<span class="attribute">json</span>": <span class="value">&#123;</span><br><span class="line">      "<span class="attribute">year</span>": <span class="value"><span class="string">"1912"</span></span>,</span><br><span class="line">      "<span class="attribute">person</span>": <span class="value"><span class="string">"Marvin Minsky"</span></span><br><span class="line">    </span>&#125;</span><br><span class="line">  </span>&#125;</span>,</span><br><span class="line">  "<span class="attribute">year</span>": <span class="value"><span class="string">"1912"</span></span>,</span><br><span class="line">  "<span class="attribute">person</span>": <span class="value"><span class="string">"Marvin Minsky"</span></span><br><span class="line"></span>&#125;</span><br></pre></td></tr></table></figure>
<p>Cela peut paraître inutile pour l’instant, mais l’intérêt de cette redondance deviendra évident avec la manipulation de champs multivalués, par exemple.</p>
<p>Le fait d’avoir déclaré une clé <code>visible</code> avec une valeur <code>true</code> implique que le champ sera visible dans la table des documents.</p>
<p>La partie <code>label</code> de la déclaration donne le nom la colonne correspondante dans la table des documents.</p>
<h1 id="Ajout_de_graphique">Ajout de graphique</h1><p>Pour ajouter un graphique, il suffit de sélectionner un type parmi:</p>
<ol>
<li>histogramme <code>histogram</code></li>
<li>barres horizontales <code>horizontalbars</code></li>
<li>camembert <code>pie</code></li>
<li>carte géographique <code>map</code></li>
<li>réseau <code>network</code></li>
</ol>
<p>et d’y associer un champ (calculé ou non).</p>
<p>Le plus simple est un histogramme.</p>
<p>Tous les graphiques sont inclus dans le <code>dashboard</code> (tableau de bord), c’est-à-dire la page d’accueil d’ezVIS.</p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="Introduction">Introduction</h1><p>Pour créer un rapport web avec ezVIS, il faut configurer l’application. Il y a 3 volets:</p>
<ol>
]]>
    </summary>
    
      <category term="configuration" scheme="http://madec-project.github.io/blog/tags/configuration/"/>
    
      <category term="ezvis" scheme="http://madec-project.github.io/blog/tags/ezvis/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Présentation d'ezVIS]]></title>
    <link href="http://madec-project.github.io/blog/2015/03/13/Presentation/"/>
    <id>http://madec-project.github.io/blog/2015/03/13/Presentation/</id>
    <published>2015-03-13T17:02:00.000Z</published>
    <updated>2015-04-15T14:53:38.000Z</updated>
    <content type="html"><![CDATA[<h1 id="Introduction">Introduction</h1><p>ezVIS est le résultat d’une réflexion menée au sein de l’Inist-CNRS sur le besoin d’un outil de mise à disposition et d’exploration de corpus en remplacement d’outil développé précédemment comme SERVIST. Dans le cadre du projet MADEC, le choix a été fait d’aborder l’exploration d’un corpus par sa description à travers un tableau de bord.  Cela a conduit au développement d’un outil de réalisation de tableau de bord décrivant le corpus et y donnant accès.</p>
<h1 id="ezVIS">ezVIS</h1><p>L’Inist-CNRS propose à travers son service <em>Appui au pilotage</em> des études bibliométriques réalisées à partir de données structurées fournies par les usagers ou issues de bases de données pour assurer le suivi de la production scientifique, mettre en évidence les collaborations, etc. Ces études livrées sous forme de rapport PDF ne répondent pas à toutes les attentes des usagers (réutilisation des graphiques, accès aux données, etc.). Un outil comme <a href="https://github.com/madec-project/ezvis" target="_blank" rel="external">ezVIS</a> est la solution retenue pour satisfaire les attentes d’interactivité et de dynamisme du résultat fourni à travers un tableau de bord convivial point d’entrée du rapport en ligne.</p>
<h2 id="Configuration_des_rapports">Configuration des rapports</h2><p>Chaque rapport mis en ligne correspond à une instance configurée de façon relativement simple. Il est possible de créer autant d’instances que nécessaire en reproduisant la même configuration ou en la personnalisant. Cet aspect devrait permettre de multiplier le nombre de rapports en capitalisant et mutualisant les configurations. Ce gain de temps devrait permettre de pousser le travail de personnalisation.</p>
<p>Par ailleurs, les instances peuvent être gérées grâce à une interface à la prise en main aisée.<br>La figure 1 présente <a href="https://github.com/madec-project/ezmaster" target="_blank" rel="external">l’interface d’administration</a> qui permet créer et gérer (modification, suppression) les instances et de les configurer.</p>
<img src="/blog/2015/03/13/Presentation/ezmaster-edit-instance.png">
<p>Figure 1 : interface d’administration et outil de paramétrage d’un rapport</p>
<p>À partir de données structurées en UTF8 et mises à disposition dans des fichiers de différents formats (csv, tsv ou XML) la configuration consiste à :</p>
<ul>
<li>sélectionner les champs à afficher ou à utiliser pour les calculs,</li>
<li>réaliser les calculs (somme, pourcentage, etc.),</li>
<li>choisir le type de graphique  (histogramme, camembert, barres horizontales) et les paramétrer (couleurs, seuil, légende).</li>
<li>définir les facettes associées à chaque graphique.</li>
<li>déterminer l’affichage des notices.</li>
</ul>
<h2 id="Fonctionnalités_d’exploration">Fonctionnalités d’exploration</h2><p>À ce stade du développement, l’outil offre un rapport web constitué d’une page d’accueil présentant le tableau de bord et un index sous forme de menu à partir desquels il est possible de naviguer vers des informations plus détaillées et les notices correspondantes. Les facettes complètent les graphiques en  proposant  des filtres complémentaires  pour mettre en évidence d’autres résultats. La figure 2 présente un des graphiques du tableau de bord avec les facettes associées et le corpus sous forme de tableau.</p>
<img src="/blog/2015/03/13/Presentation/ezvis-dashboard.png">
<p>Figure 2 : Détail du tableau de bord</p>
<p>La suite du développement prévoit d’autres types de représentations comme des cartes, des réseaux ainsi que des fonctionnalités comme l’export ou la sécurisation de l’interface.</p>
<h1 id="Exemples_d’usages">Exemples d’usages</h1><p>Le principal besoin auquel répond ezVIS est la création de tableaux de bord mettant en évidence des informations de type bibliométrique. La facilité de création et de configuration d’une instance est l’un des avantages évidents de cet outil qui autorise la multiplication des tableaux de bord.  Toujours dans le domaine des corpus de notices bibliographiques, un tel outil permet également de vérifier le contenu et la qualité des données.<br>Enfin, le fait qu’il s’agisse d’un logiciel libre autorise son appropriation au-delà de la production scientifique comme par exemple pour l’analyse de fichiers de « logs » dans le cadre du projet ezPAARSE3.</p>
<h2 id="Connaissance_de_la_production_scientifique_liée_à_une_thématique">Connaissance de la production scientifique liée à une thématique</h2><p>À partir d’un corpus constitué thématiquement, il est possible de mettre en évidence des éléments concernant la production scientifique, son évolution ainsi que la répartition en sous-thématiques, par exemple. La figure 3 illustre l’utilisation d’un graphique de type camembert qui représente la répartition thématique du corpus. Il est possible en cliquant sur une partie du graphique d’avoir accès à la liste des résultats correspondants. Il est également possible d’utiliser les facettes pour mettre à jour le graphique de manière dynamique le graphique.</p>
<img src="/blog/2015/03/13/Presentation/ezvis-facets.png">
<p>Figure 3 : Mise en évidence de l’utilisation des facettes pour filtrer les résultats</p>
<h2 id="Exploration_du_contenu_d’un_corpus">Exploration du contenu d’un corpus</h2><p>Il peut être utile avant la mise en ligne de notices bibliographiques de vérifier la qualité des données ou leur homogénéité lorsque les origines et les formats sont différents. La figure 4 illustre l’exploration du corpus mis à disposition par un éditeur dans le cadre d’un projet.</p>
<img src="/blog/2015/03/13/Presentation/ezvis-biblio-corpus.png">
<p>Figure 4 : Exploration d’un corpus de notice bibliographique</p>
<h2 id="Analyse_des_consultations_de_ressources_en_ligne">Analyse des consultations de ressources en ligne</h2><p>ezVIS peut être utilisé pour réaliser des comptages d’autres types d’informations structurées et le choix d’un logiciel libre favorise fortement l’élargissement de l’usage. La figure 5 illustre l’utilisation d’ezVIS pour la mise en évidence du détail des consultations.</p>
<img src="/blog/2015/03/13/Presentation/ezvis-logs.png">
<p>Figure 5 : Détail  des consultations de ressources numériques</p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="Introduction">Introduction</h1><p>ezVIS est le résultat d’une réflexion menée au sein de l’Inist-CNRS sur le besoin d’un outil de mi]]>
    </summary>
    
      <category term="ezmaster" scheme="http://madec-project.github.io/blog/tags/ezmaster/"/>
    
      <category term="ezvis" scheme="http://madec-project.github.io/blog/tags/ezvis/"/>
    
      <category term="présentation" scheme="http://madec-project.github.io/blog/tags/presentation/"/>
    
      <category term="vsst" scheme="http://madec-project.github.io/blog/tags/vsst/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Bienvenue]]></title>
    <link href="http://madec-project.github.io/blog/2015/02/10/Bienvenue/"/>
    <id>http://madec-project.github.io/blog/2015/02/10/Bienvenue/</id>
    <published>2015-02-10T14:10:04.000Z</published>
    <updated>2015-02-10T14:13:28.000Z</updated>
    <content type="html"><![CDATA[<p>Ce blog en français a pour sujet le projet MADEC, et donc ses outils.</p>
<p>Ils sont tous hébergés sur <a href="https://github.com/madec-project/" target="_blank" rel="external">Github</a>.</p>
<p>Le rythme de publication n’est pas encore fixé.<br>Il dépendra surtout de nos disponibilités.</p>
<p>À bientôt, donc.</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Ce blog en français a pour sujet le projet MADEC, et donc ses outils.</p>
<p>Ils sont tous hébergés sur <a href="https://github.com/madec]]>
    </summary>
    
      <category term="général" scheme="http://madec-project.github.io/blog/tags/general/"/>
    
  </entry>
  
</feed>